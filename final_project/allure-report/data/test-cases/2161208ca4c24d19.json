{
  "uid" : "2161208ca4c24d19",
  "name" : "test_register_active_time",
  "fullName" : "test_ui.TestRegisterPage#test_register_active_time",
  "historyId" : "3a5db627ab255068e3bded41af597a19",
  "time" : {
    "start" : 1590595743297,
    "stop" : 1590595747401,
    "duration" : 4104
  },
  "description" : "\n        CHECK 'ACTIVE TIME' FLAG AFTER REGISTRATION\n        \n        Step 1:\n        Register user via registration page\n        \n        Step 2:\n        Check that 'active time' field is not null in database\n        \n        EXPECT: \n        'active time' field is not null in database\n        ",
  "descriptionHtml" : "<pre><code>    CHECK 'ACTIVE TIME' FLAG AFTER REGISTRATION\n    \n    Step 1:\n    Register user via registration page\n    \n    Step 2:\n    Check that 'active time' field is not null in database\n    \n    EXPECT: \n    'active time' field is not null in database\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert None is not None",
  "statusTrace" : "self = <test_ui.TestRegisterPage object at 0x7fbe641a9190>\nregister_page = <ui.pages.register.RegisterPage object at 0x7fbe6422f550>\n\n    @pytest.mark.UI\n    def test_register_active_time(self, register_page):\n        \"\"\"\n        CHECK 'ACTIVE TIME' FLAG AFTER REGISTRATION\n    \n        Step 1:\n        Register user via registration page\n    \n        Step 2:\n        Check that 'active time' field is not null in database\n    \n        EXPECT:\n        'active time' field is not null in database\n        \"\"\"\n        user = register_page.get_user()\n        register_page.send(register_page.locators.FORM_USERNAME, user.username)\n        register_page.send(register_page.locators.FORM_PASSWORD, user.username)\n        register_page.send(register_page.locators.FORM_CPASSWORD, user.username)\n        register_page.send(register_page.locators.FORM_EMAIL, user.email)\n        register_page.click(register_page.locators.FORM_CONFIRM)\n        register_page.click(register_page.locators.BUTTON_SUBMIT)\n        active_time = self.builder.get_datetime(user)\n        self.builder.delete_user(user)\n>       assert active_time is not None\nE       assert None is not None\n\ntest_ui.py:346: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "register_page",
    "time" : {
      "start" : 1590595742899,
      "stop" : 1590595743296,
      "duration" : 397
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1590595742899,
      "stop" : 1590595742899,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1590595586612,
      "stop" : 1590595586644,
      "duration" : 32
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "mysql_orm_client",
    "time" : {
      "start" : 1590595586644,
      "stop" : 1590595586677,
      "duration" : 33
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1590595722279,
      "stop" : 1590595742899,
      "duration" : 20620
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1590595747414,
      "stop" : 1590595748403,
      "duration" : 989
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b2ffe427acf9eb86",
      "name" : "test_register_active_time",
      "source" : "b2ffe427acf9eb86.png",
      "type" : "image/png",
      "size" : 70077
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "UI"
  }, {
    "name" : "suite",
    "value" : "test_ui"
  }, {
    "name" : "subSuite",
    "value" : "TestRegisterPage"
  }, {
    "name" : "host",
    "value" : "alex-Z87X-UD3H"
  }, {
    "name" : "thread",
    "value" : "3006-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_ui"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "UI" ]
  },
  "source" : "2161208ca4c24d19.json",
  "parameterValues" : [ ]
}