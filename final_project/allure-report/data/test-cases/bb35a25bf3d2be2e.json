{
  "uid" : "bb35a25bf3d2be2e",
  "name" : "test_reg_form_validation_multiple_error[2]",
  "fullName" : "test_ui.TestRegisterPage#test_reg_form_validation_multiple_error",
  "historyId" : "6105fdd0aa288c8d36d372044abdffff",
  "time" : {
    "start" : 1590595716105,
    "stop" : 1590595717420,
    "duration" : 1315
  },
  "description" : "\n        CHECK REGISTER FORM VALIDATION ERRORS\n        \n        Step 1:\n        Type in data into forms (with 2 or 3 errors)\n        \n        Step 2:\n        Click register\n        \n        Step 3:\n        Check that user is not created and error message is displayed\n\n        EXPECT: \n        User is not created, error message displayed correctly\n        ",
  "descriptionHtml" : "<pre><code>    CHECK REGISTER FORM VALIDATION ERRORS\n    \n    Step 1:\n    Type in data into forms (with 2 or 3 errors)\n    \n    Step 2:\n    Click register\n    \n    Step 3:\n    Check that user is not created and error message is displayed\n\n    EXPECT: \n    User is not created, error message displayed correctly\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert \"{'email': [...ust match']}\" not in '<html lang=...body></html>'\n  \"{'email': ['Invali...words must match']}\" is contained here:\n    <html lang=\"en\"><head>\n        <meta charset=\"UTF-8\">\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n    \n        \n            <title></title>...\n  \n  ...Full output truncated (91 lines hidden), use '-vv' to show",
  "statusTrace" : "self = <test_ui.TestRegisterPage object at 0x7f0904d3e6a0>\nregister_page = <ui.pages.register.RegisterPage object at 0x7f0904d0b4f0>\nerr = 2\n\n    @pytest.mark.UI\n    @pytest.mark.parametrize(\"err\", [1, 2, 3])\n    def test_reg_form_validation_multiple_error(self, register_page, err):\n        \"\"\"\n        CHECK REGISTER FORM VALIDATION ERRORS\n    \n        Step 1:\n        Type in data into forms (with 2 or 3 errors)\n    \n        Step 2:\n        Click register\n    \n        Step 3:\n        Check that user is not created and error message is displayed\n    \n        EXPECT:\n        User is not created, error message displayed correctly\n        \"\"\"\n        if err == 1:\n            NAME = register_page.generate_data()\n            register_page.send(register_page.locators.FORM_USERNAME, \"1\")\n            register_page.send(register_page.locators.FORM_PASSWORD, NAME)\n            register_page.send(register_page.locators.FORM_CPASSWORD, NAME + \"@test.tuu\")\n            register_page.send(register_page.locators.FORM_EMAIL, NAME + \"@test.tuu\")\n            register_page.click(register_page.locators.FORM_CONFIRM)\n            register_page.click(register_page.locators.BUTTON_SUBMIT)\n            assert \"Passwords must match\" in register_page.driver.page_source\n            assert \"Incorrect username length\" in register_page.driver.page_source\n            assert \"{'username': ['Incorrect username length'], 'password': ['Passwords must match']}\" not in register_page.driver.page_source\n            assert self.builder.check_user_by_name(NAME) == False\n        elif err == 2:\n            NAME = register_page.generate_data()\n            register_page.send(register_page.locators.FORM_USERNAME, NAME)\n            register_page.send(register_page.locators.FORM_PASSWORD, NAME)\n            register_page.send(register_page.locators.FORM_CPASSWORD, NAME + \"Q\")\n            register_page.send(register_page.locators.FORM_EMAIL, NAME + \"@\")\n            register_page.click(register_page.locators.FORM_CONFIRM)\n            register_page.click(register_page.locators.BUTTON_SUBMIT)\n            assert \"Invalid email address\" in register_page.driver.page_source\n            assert \"Passwords must match\" in register_page.driver.page_source\n>           assert \"{'email': ['Invalid email address'], 'password': ['Passwords must match']}\" not in register_page.driver.page_source\nE           assert \"{'email': [...ust match']}\" not in '<html lang=...body></html>'\nE             \"{'email': ['Invali...words must match']}\" is contained here:\nE               <html lang=\"en\"><head>\nE                   <meta charset=\"UTF-8\">\nE                   <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\nE               \nE                   \nE                       <title></title>...\nE             \nE             ...Full output truncated (91 lines hidden), use '-vv' to show\n\ntest_ui.py:280: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "mysql_orm_client",
    "time" : {
      "start" : 1590595586644,
      "stop" : 1590595586678,
      "duration" : 34
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "register_page",
    "time" : {
      "start" : 1590595715637,
      "stop" : 1590595716104,
      "duration" : 467
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1590595715636,
      "stop" : 1590595715636,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1590595586612,
      "stop" : 1590595586644,
      "duration" : 32
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1590595696679,
      "stop" : 1590595715636,
      "duration" : 18957
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1590595717436,
      "stop" : 1590595718472,
      "duration" : 1036
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ccfb01be0b72f77e",
      "name" : "test_reg_form_validation_multiple_error",
      "source" : "ccfb01be0b72f77e.png",
      "type" : "image/png",
      "size" : 40505
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "UI"
  }, {
    "name" : "suite",
    "value" : "test_ui"
  }, {
    "name" : "subSuite",
    "value" : "TestRegisterPage"
  }, {
    "name" : "host",
    "value" : "alex-Z87X-UD3H"
  }, {
    "name" : "thread",
    "value" : "2999-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_ui"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "err",
    "value" : "2"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "UI" ]
  },
  "source" : "bb35a25bf3d2be2e.json",
  "parameterValues" : [ "2" ]
}